HW_2 Postman


http://162.55.220.72:5005/first
1. Отправить запрос.
2. Статус код 200
pm.test("Status code is 200", function () {
pm.response.to.have.status(200);
});

3. Проверить, что в body приходит правильный string.
pm.test("Body matches string", function () {
pm.expect(pm.response.text()).to.include("This is the first responce from server!");
});

________________________________________________________________________________________


http://162.55.220.72:5005/user_info_3
1. Отправить запрос.
2. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

3. Спарсить response body в json.
var jsonData = pm.response.json()

4. Проверить, что name в ответе равно name s request (name вбить руками.)
pm.test("Your test name", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.name).to.eql("hanna");
});

5. Проверить, что age в ответе равно age s request (age вбить руками.)
pm.test("Your test age", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.age).to.eql("30");
});

6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
pm.test("Your test salary", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.salary).to.eql(1000);
});

7. Спарсить request.
var req_data = request.data;

8. Проверить, что name в ответе равно name s request (name забрать из request.)
pm.test("name=name request" , function () {
    pm.expect (jsonData.name).to.eql(pm.request.body.formdata.get ("name"))
})

9. Проверить, что age в ответе равно age s request (age забрать из request.)
pm.test("age=age request" , function () {
    pm.expect (jsonData.age).to.eql(pm.request.body.formdata.get ("age"))
})

10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
pm.test("salary=salary request" , function () {
     pm.request.url.query.get("salary");
})

11. Вывести в консоль параметр family из response.
var resp_family = jsonData.family;
console.log(jsonData.family)

12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
 pm.test("Your Salary_1_5", function () {
   pm.expect(resp_family.u_salary_1_5_year).to.eql(req_data.salary*4);  
});

____________________________________________________________________________

http://162.55.220.72:5005/object_info_3
1. Отправить запрос.

2. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});


3. Спарсить response body в json.
var jsonData = pm.response.json() ;

4. Спарсить request.
var req_data = pm.request.toJSON().url.query

console.log(req_data[0].value)

5.  Проверить, что name в ответе равно name s request (name забрать из request.)
pm.test("name=name request", function () {
    //var jsonData = pm.response.json();
    pm.expect(jsonData.name).to.eql(req_data[0].value);
  })

6.  Проверить, что age в ответе равно age s request (age забрать из request.)
pm.test("age=age request", function () {
    //var jsonData = pm.response.json();
    pm.expect(jsonData.age).to.eql(req_data[1].value);
  })

7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
pm.test("salary=salary request", function () {
    //var jsonData = pm.response.json();
    pm.expect(jsonData.salary).to.eql(+req_data[2].value);
  })

8. Вывести в консоль параметр family из response.
var resp_family = jsonData.family;
console.log(jsonData.family)

9. Проверить, что у параметра dog есть параметры name.
pm.test("dog have name", function () {
    //var jsonData = pm.response.json();
pm.expect(resp_family.pets.dog).to.have.property("name")
})

10. Проверить, что у параметра dog есть параметры age.
pm.test("dog have age", function () {
    //var jsonData = pm.response.json();
pm.expect(resp_family.pets.dog).to.have.property("age")
})

11.  Проверить, что параметр name имеет значение Luky.
pm.test("name=Luky", function () {
    //var jsonData = pm.response.json();
pm.expect(resp_family.pets.dog.name).to.eql("Luky");
})

12. Проверить, что параметр age имеет значение 4.
pm.test("age=4", function () {
    //var jsonData = pm.response.json();
pm.expect(resp_family.pets.dog.age).to.eql(4);
})


______________________________________________________________________________


http://162.55.220.72:5005/object_info_4
1. Отправить запрос.
2. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

3. Спарсить response body в json.
var jsonData = pm.response.json();


4.  Спарсить request.
var req_data = pm.request.toJSON().url.query


console.log(req_data[0].value)

5. Проверить, что name в ответе равно name s request (name забрать из request.)
pm.test("name=name request", function () {
  //var jsonData = pm.response.json();
    pm.expect(jsonData.name).to.eql(req_data[0].value);
  })  

6. Проверить, что age в ответе равно age из request (age забрать из request.)
pm.test("age=age request", function () {
    //var jsonData = pm.response.json();
    pm.expect(jsonData.age).to.eql(+req_data[1].value);
  })
7. Вывести в консоль параметр salary из request.
var req_data = pm.request.toJSON().url.query
console.log(req_data[2].value)

8. Вывести в консоль параметр salary из response.
console.log(jsonData.salary)

9. Вывести в консоль 0-й элемент параметра salary из response.
console.log(jsonData.salary[0]);

10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.
console.log(jsonData.salary[1]);

11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.
console.log(jsonData.salary[2]);

12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
pm.expect(+req_data[2].value).to.eql(+jsonData.salary[0]);

13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)
pm.expect(+req_data[2].value*2).to.eql(+jsonData.salary[1]);

14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)
pm.expect(+req_data[2].value*3).to.eql(+jsonData.salary[2]);


15. Создать в окружении переменную age
16. Создать в окружении переменную salary

17. Передать в окружение переменную name
pm.environment.set("name",req_data[0].value);

18. Передать в окружение переменную age
pm.environment.set("age",req_data[1].value);

19. Передать в окружение переменную salary
pm.environment.set("salary",req_data[2].value);

20. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.
for (let i = 0; i < 3; i++) {
  console.log(jsonData.salary[i])
}

________________________________________________________________________________________________________________

http://162.55.220.72:5005/user_info_2
1. Вставить параметр salary из окружения в request
2. Вставить параметр age из окружения в age
3. Вставить параметр name из окружения в name
4. Отправить запрос.
5. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

6. Спарсить response body в json.
var responseBody = pm.response.json();

7. Спарсить request.
var requestBody = request.data;

8. Проверить, что json response имеет параметр start_qa_salary
pm.test("start_qa_salary", function () {
    //var jsonData = pm.response.json();
pm.expect(responseBody).to.have.property("start_qa_salary")
})

9. Проверить, что json response имеет параметр qa_salary_after_6_months
pm.test("qa_salary_after_6_months", function () {
    //var jsonData = pm.response.json();
pm.expect(responseBody).to.have.property("qa_salary_after_6_months")
})

10. Проверить, что json response имеет параметр qa_salary_after_12_months
pm.test("qa_salary_after_12_months", function () {
    //var jsonData = pm.response.json();
pm.expect(responseBody).to.have.property("qa_salary_after_12_months")
})

11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
pm.test("qa_salary_after_1.5_year", function () {
    //var jsonData = pm.response.json();
pm.expect(responseBody).to.have.property("qa_salary_after_1.5_year")
})

12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
pm.test("qa_salary_after_3.5_years", function () {
    //var jsonData = pm.response.json();
pm.expect(responseBody).to.have.property("qa_salary_after_3.5_years")
})

13. Проверить, что json response имеет параметр person
pm.test("person", function () {
    //var jsonData = pm.response.json();
pm.expect(responseBody).to.have.property("person")
})

14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
pm.test("start_qa_salary=salary", function () {
//var jsonData = pm.response.json();
pm.expect(+requestBody.salary).to.eql(responseBody.start_qa_salary);
})
  
15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
pm.test("qa_salary_after_6_months=salary*2", function () {
//var jsonData = pm.response.json();
pm.expect(requestBody.salary*2).to.eql(responseBody.qa_salary_after_6_months);
})  

16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
pm.test("qa_salary_after_12_months=salary*2,7", function () {
//var jsonData = pm.response.json();
pm.expect(requestBody.salary*2.7).to.eql(responseBody.qa_salary_after_12_months);
})  

17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.
pm.test("qa_salary_after_1.5_year", function () {
//var jsonData = pm.response.json();
pm.expect(requestBody.salary*3.3).to.eql(responseBody["qa_salary_after_1.5_year"]);
})
  
18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
pm.test("qa_salary_after_3.5_years", function () {
//var jsonData = pm.response.json();
pm.expect(requestBody.salary*3.8).to.eql(responseBody["qa_salary_after_3.5_years"]);
}) 

19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
pm.test("u_name = salary из request", function () {
//var jsonData = pm.response.json();
pm.expect(+requestBody.salary).to.eql(+responseBody.person.u_name[1]);
})   

20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
pm.test("age=age req", function () {
//var jsonData = pm.response.json();
pm.expect(+requestBody.age).to.eql(+responseBody.person.u_age);
})

21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
pm.test("u_salary_5_years=salary*4.2", function () {
//var jsonData = pm.response.json();
pm.expect(requestBody.salary*4.2).to.eql(responseBody.person.u_salary_5_years);
})

22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.
for (let i = 0; i < 3; i++) {
console.log(Object.entries(responseBody.person)[i][0], Object.entries(responseBody.person)[i][1])
}








